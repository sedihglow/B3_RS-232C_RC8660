@ filename: init_uart4.s
@
@
@ initalizes UART4 and its interrupts
@
@
@ Writen by: James Ross


.text
.global _init_uart4
_init_uart4:
@ UART definitions
.equ UART4_BASE,    0x481A8000 @ UART4          	     Base Address
.equ UART_LCR,      0xC		  @ Line Ctrl 			     register offset
.equ UART_DLH,      0x04 	  @ DLH div latch high       register offset 
.equ UART_TXHR,	    0x0	  	  @ THR Transmit Holding     register offset
.equ UART_DLL,      0x0		  @ DLL div latch low        register offset
.equ UART_FCR,      0x8	  	  @ FIFO control		     register offset
.equ MODEM_CTRL,    0x10 	  @ Moden CTRL 		 	     register offset
.equ UART_IIR,      0x8	 	  @ Interrupt ID		     register offset
.equ UART_IER,      0x4	 	  @ IER_UART, Int EN         register offset
.equ SET_UART_IER,  0x000A    @ THRIT,MODEMSTIT 16bit    register offset
.equ LCR_CONF_MODE, 0x0083    @ Char len 8bit, conf mode Mask
.equ LCR_OP_MODE,	0x0003    @ Char len 8bit, op mode 	 Mask
.equ HIGH_DIV,		0x00	  @ High bytes of divisor	 Val
.equ LOW_DIV,		0x1A 	  @ Low bytes of divisor	 Val


uart4Base .req R10
lcrReg    .req R9
@************************* Start _init_uart4 ***********************************	
	SMFD SP! {R0-R10,LR}
	LDR uart4Base, =UART4_BASE
	ADD R9, uart4Base, #UART_LCR
@ Set clock?

	
@ Set LCR to mode A, configure mode with char len 8bits
	MOV R3, #LCR_CONF_MODE
	STR R3, lcrReg

@ Set diviser latch low and high for 115.2kbs
		
@ Set MDR1 for UART16x mode	

@ Go back into operational mode for UART, LCR[7] = 0 with charlen 8bits
	
	LMFD SP! {R0-R10, PC}