@ filename: init_syth_8660.s
@
@ Initializes the features and rates of the RC8660 through UART4
@ Values passed: R1, character pointer to desired command
@ Written by: James Ross

.text
.global _init_syth_8660
_init_syth_8660:
@ UART definitions
.equ UART4_BASE,    0x481A8000 @ UART4          	      Base Address
.equ UART_TXHR,	    0x0	  	   @ THR Transmit Holding     register offset
.equ CR_LOCKBAUD,   0x0D	   @ Character to send to 8660 to lock Baud rate

.equ NUM, 0x00340000 @ for testing

@ register assignment definitions
uart4Base .req R10
cmdMsg 	  .req R1

@********************* Start _init_syth_8660 ***********************************

	STMFD SP!, {R0-R10, LR}
	
	LDR uart4Base, =UART4_BASE
	
	@ Lock the baud rate. SEE NOTE IN INT_UART4 on strange behavior
	MOV R4, #CR_LOCKBAUD
	STR R4, [uart4Base, #UART_TXHR]
	
	/* Any command 75ms after baud rate is locked will be ignored. Will not have
	 * to worry about it since it puts CTS high during that time period so just
	 * check that. */
	 
	@ Change the voice of the talker.
				

	LDMFD SP!, {R0-R10, PC}
	

SEND_COMMAND:
@ Assert RTS#

@ Check if CTS# is high

@ Check if THR is clear

@ If both CTS# and THR is clear, send byte

@ repeat until all bytes send, designated by carriage return 0x0D

.data
.align 4
	VOICE:
		.ascii "pretend"
		.byte 0x0D
.end
@*************** EOF **************