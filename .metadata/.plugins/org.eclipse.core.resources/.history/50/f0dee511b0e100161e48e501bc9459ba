@ This program will use a RS-232C driver to make speach come out of an RC
@ systems 8660 coice synthesizer.
@
@ File name: main_p1_part1.s
@ Board: Beagle Bone Black
@ Written by: James Ross

.text
.global _start
_start:
@ CLK definitions
.equ CM_PER_BASE,      0x44E00000   @ CM_PER base register
.equ GPIO1_CLK_ENABLE, 0x00000002   @ Enable GPIO1 clk at CM_PER_GPIO_CLKCTRL
.equ GPIO1_CLK_CTRL,   0x44E000AC   @ CM_PER_GPIO1_CLKCTRL  register address
//.equ TIMER3_CLK_CTRL,  0x44E00084 @ CM_PER_TIMER3_CLKCTRL register address
//.equ TIMER3_CLKSEL,    0x44E0050C @ CLKSEL_TIMER3_CLK     register address

@ GPIO definitions
.equ GPIO1_BASE,          0x4804C000  @ GPIO1               Base Address
.equ GPIO_OE,             0x134       @ GPIO_OE             register offset
.equ GPIO_CLEAR_DATAOUT,  0x190       @ GPIO_CLEARDATAOUT   register offset
.equ GPIO_SET_DATAOUT,    0x194       @ GPIO_SETDATAOUT     register offset
.equ GPIO_FALLING_DETECT, 0x14C       @ GPIO_FALLINGDETECT  register offset
.equ GPIO_IRQSTAT0,       0x2C        @ GPIO_IRQSTATUS_0    register offset
.equ GPIO_IRQSTAT_SET0,   0x34        @ GPIO_IRQSTAT_SET_0  register offset

@ Interupt definitions
@.equ INTC_BASE,           0x48200000  @ INCPS               Base Address
@.equ INTC_CONTROL,        0x48        @ INTC_CONTROL        register offset
@.equ INTC_CONFIG,         0x10        @ INTC_SYSCONFIG      register offset
@.equ INTC_MIR_CLEAR2,     0xC8        @ INTC_MIR_CLEAR2     register offset
@.equ INTC_MIR_CLEAR3,     0xE8        @ INTC_MIR_CLEAR3     register offset
@.equ INTC_MIR_SET3,       0xEC        @ INTC_MIR_SET3       register offset
@.equ INTC_PENDING_IRQ3,   0xF8        @ INTC_PENDING_IRQ3   register offset
@.equ GPIOINT1A,           0x4         @ GPIOINT1A in MIR3   Mask
@.equ TINT3,               0x20        @ TINT3 in MIR2       Mask

@ Timer defintions
@.equ TIMER3_BASE,         0x48042000  @ DMTIMER3            Base Address
@.equ TIOCP_CFG,           0x10        @ TIOCP_CFG           register offset
@.equ IRQ_ENABLE_SET,      0x2C        @ IRQENABLE_SET       register offset
@.equ TCLR,                0x38        @ TCLR                register offset
@.equ TCRR,                0x3C        @ TCRR                register offset
@.equ TLDR,                0x40        @ TLDR                register offset
@.equ TIMER_COUNTER_VAL,   0xFFFF80FF  @ Loaded into TLDR and TCRR, 1.00793s
  
@ UART definitions
.equ UART4_BASE, 0x481A8000

@ LED definitions
.equ SET_LED1_OUTPUT, 0xFFBFFFFF      @ Mask to set GPIO1_22 as output
//.equ SET_LED1,    	  0x00400000      @ Mask to set LED1, GPIO1_22






.data


.end
@@@@@@@@@@ EOF @@@@@@@@@@