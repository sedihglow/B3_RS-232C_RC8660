@ filename: init_syth_8660.s
@
@ Initializes the features and rates of the RC8660 through UART4
@
@ Written by: James Ross

.text
.global _init_syth_8660
_init_syth_8660:
@ UART definitions
.equ UART4_BASE,    0x481A8000 @ UART4          	      Base Address
.equ UART_TXHR,	    0x0	  	   @ THR Transmit Holding     register offset
.equ CR_LOCKBAUD,   0x0D	   @ Character to send to 8660 to lock Baud rate

.equ NUM, 0x00340000 @ for testing

@ register assignment definitions
uart4Base .req R10

@********************* Start _init_syth_8660 ***********************************

	STMFD SP!, {R0-R10, LR}
	
	LDR uart4Base, =UART4_BASE
	
	@ Lock the baud rate. SEE NOTE IN INT_UART4 on strange behavior
	MOV R4, #CR_LOCKBAUD
	STR R4, [uart4Base, #UART_TXHR]
	
	@ Any command 75ms after baud rate is locked will be ignored. Will not have
	@ to worry about it since it puts CTS high during that time period

@*************** END TEST CODE 1 **********************************************	
/*	
  	movs  r0, #NUM    
LOOP4: subs  r0, r0, #1  
   	  bne   LOOP4
   	  
   	  LDR R4, =MESSAGE
   	  LDRB R6, [R4], #1
   	  STRB R6, [uart4Base, #UART_TXHR] 
   	movs  r0, #NUM    
LOOP2: subs  r0, r0, #1  
   	  bne   LOOP2

   	  LDRB R6, [R4]
   	  STRB R6, [uart4Base, #UART_TXHR] 
*/
@ ***************** END FAIL TEST CODE 2 WITH POINTER, WHYYYY *****************
   	  
   
	LDMFD SP!, {R0-R10, PC}
.end
@*************** EOF **************