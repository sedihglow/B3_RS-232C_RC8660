@ filename: init_gpio.s
@
@ initializes the required GPIO pins for project1
@
@ Written by: James Ross

.text
.global _init_gpio
_init_gpio:
@ GPIO definitions
.equ GPIO1_BASE,          0x4804C000  @ GPIO1               Base Address
.equ GPIO_OE,             0x134       @ GPIO_OE             register offset
.equ GPIO_CLEAR_DATAOUT,  0x190       @ GPIO_CLEARDATAOUT   register offset
.equ GPIO_FALLING_DETECT, 0x14C       @ GPIO_FALLINGDETECT  register offset
.equ GPIO_IRQSTAT_SET0,   0x34        @ GPIO_IRQSTAT_SET_0  register offset
.equ GPIO1_31_BIT,		  0x80000000 @ GPIO1_31 bit

@ LED definitions
.equ SET_LED1_OUTPUT, 0xFFBFFFFF      @ Mask to set GPIO1_22 as output
.equ SET_LED1,    	  0x00400000      @ Mask to set LED1, GPIO1_22

@ reg assignment definitions
gpio1Base .req R9					  @ R9 reserved for gpio1 base address

@*********************** start _init_gpio **************************************
	STMFD SP!, {R4-R6, LR}
	
	
	@ Set GPIO1_22 as output
	LDR gpio1Base, =GPIO1_BASE
	MOV R4, #SET_LED1			@ GPIO1_22
	STR R4, [gpio1Base, #GPIO_CLEAR_DATAOUT]
	
	@ Enable GPIO1_22
	ADD R4, gpio1Base, #GPIO_OE @ Set R7 as GPIO output enable
	MOV R5, #SET_LED1_OUTPUT	@ GPIO1_ 22, R8 set to LED1 output enable value
	LDR R6, [R4]			    @ Load
	AND R6, R6, R5 			    @ Modify
	STR R6, [R4]				@ Store to set LED1 as output
	
@********************** set interrupt fields ***********************************
	@ Set interupt to trigger from high to low on GPIO1_31	
	ADD R4, gpio1Base, #GPIO_FALLING_DETECT
	MOV R5, #GPIO1_31_BIT
	LDR R6, [R4]
	ORR R6, R6, R5			@ Set bit for GPIO1_31 falling edge detect
	STR R6, [R4]			@ Store back in reg
	
	@ Enable interrupt field for GPIO_31
	STR R5, [gpio1Base, #GPIO_IRQSTAT_SET0]
	
	LDMFD SP!, {R1-R10, PC}
.end
@******************* EOF **********************